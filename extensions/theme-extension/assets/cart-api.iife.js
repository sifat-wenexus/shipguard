var CartAPI=function(c){"use strict";var p=Object.defineProperty;var g=(c,a,o)=>a in c?p(c,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):c[a]=o;var d=(c,a,o)=>(g(c,typeof a!="symbol"?a+"":a,o),o);const f=class f extends XMLHttpRequest{static addEventListener(s,e,t=!0){t?this.beforeListeners[s].add(e):this.afterListeners[s].add(e)}static removeEventListener(s,e,t=!0){t?this.beforeListeners[s].delete(e):this.afterListeners[s].delete(e)}open(s,e,t=!0,i,n){for(const r of f.beforeListeners.open)r(this,s,e,t,i,n);super.open(s,e,t,i,n);for(const r of f.afterListeners.open)r(this,s,e,t,i,n)}};d(f,"beforeListeners",{open:new Set}),d(f,"afterListeners",{open:new Set});let a=f;const h=class h{constructor(s){d(this,"queue",new Set);d(this,"listeners",{before:new Set,after:new Set});d(this,"running",null);d(this,"cart",null);if(this.fetchFn=s,!h.instance)h.instance=this;else return h.instance;window.fetch=async(t,i)=>{const n=typeof t=="string"||t instanceof URL?t.toString():t.url,r=this.getCartEndpoint(n);if(r){const u=s(t,i);this.notifyListeners(r,u);const l=await u;return await this.notifyListeners(r),l}return s(t,i)},window.XMLHttpRequest=a,a.addEventListener("open",(t,i,n)=>{const r=this.getCartEndpoint(n);if(r){const u=new Promise((l,w)=>{t.addEventListener("load",()=>{l(void 0),this.notifyListeners(r)}),t.addEventListener("error",w)});this.notifyListeners(r,u)}},!0);const e=localStorage.getItem("wenexus-cart-queue");e&&(this.queue=new Set(JSON.parse(e))),this.runQueue(this.queue.size>0),window.addEventListener("beforeunload",t=>{if(this.queue.size>0)return t.preventDefault(),"Cart updates are still in progress. Are you sure you want to leave?"})}getCartEndpoint(s){const e=typeof s=="string"?s:s.toString(),t=new URL(!e.startsWith("http://")||!e.startsWith("https://")?`${window.location.origin}/${e}`:e),i={add:"/cart/add",update:"/cart/update",change:"/cart/change",clear:"/cart/clear"};for(const n in i){const r=i[n];if([r,`${r}.js`].some(u=>t.pathname.endsWith(u)))return n}return null}async notifyListeners(s,e){const t=this.cart;if(e){for(const r of this.listeners.before)r(t??await this.get(!0),{requestType:s,updatedBy:"api"},()=>new Promise(u=>{const l=()=>{if(this.queue.size>0||this.running)return setTimeout(l,800);u(e.then(()=>this.get(!0)))};setTimeout(l,800)}));await e;const n=await this.get(!0);return JSON.stringify(t,null,0)===JSON.stringify(n,null,0)?t:n}const i=await this.get(!0);if(JSON.stringify(t,null,0)===JSON.stringify(i,null,0))return t;for(const n of this.listeners.after)n(i,{requestType:s,updatedBy:"api"});return i}addListener(s,e=!1){return this.listeners[e?"before":"after"].add(s),()=>{this.removeListener(s,e)}}removeListener(s,e=!1){this.listeners[e?"before":"after"].delete(s)}async runQueue(s=!1){if(!this.running){for(const e of this.queue){this.running=e,this.queue.delete(e),localStorage.setItem("wenexus-cart-queue",JSON.stringify(Array.from(this.queue)));const t=await this.fetchFn.call(window,`/cart/${e.type}.js`,{method:"POST",headers:e.payload?{"Content-Type":"application/json"}:void 0,body:e.payload?JSON.stringify(e.payload):void 0});window.dispatchEvent(new CustomEvent(`wenexus-cart-response-${e.id}`,{detail:t}))}this.running=null,s&&(alert("Recovered from lost cart updates"),this.notifyListeners("add")),this.queue.size>0&&setTimeout(()=>this.runQueue(),10)}}waitForResponse(s){return new Promise(e=>{window.addEventListener(`wenexus-cart-response-${s}`,t=>e(t.detail))})}async request(s,e,t=!0){const i=Math.random().toString(36).slice(2)+Date.now().toString(36);this.queue.add({id:i,type:s,payload:e,trigger:t}),localStorage.setItem("wenexus-cart-queue",JSON.stringify(Array.from(this.queue))),this.runQueue();const n=await this.waitForResponse(i);return t?{cart:await this.notifyListeners(s),response:await n.json()}:{cart:await this.get(!t),response:await n.json()}}async get(s=!1){if(this.cart&&!s)return this.cart;const t=await(await fetch("/cart.js")).json();return this.cart=t,t}async update(s,e=!0){const{cart:t}=await this.request("update",{updates:s},e);return t}async append(s,e=!0){const{cart:t}=await this.request("add",{items:s},e);return t}async remove(s,e=!0){const t=s.filter(n=>{var r;return(r=this.cart)==null?void 0:r.items.some(u=>u.variant_id===n)});if(!t.length)return await this.get();const{cart:i}=await this.request("update",{updates:t.reduce((n,r)=>({...n,[r]:0}),{})},e);return i}};d(h,"instance");let o=h;return window.weNexusCartApi=new o(fetch),c.CartApi=o,Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),c}({});
